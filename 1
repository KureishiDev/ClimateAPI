import requests
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# API endpoint (example: OpenWeatherMap API - replace with your chosen API)
API_KEY = "YOUR_API_KEY"  # Replace with your actual API key
CITY = "London"
API_URL = f"http://api.openweathermap.org/data/2.5/weather?q={CITY}&appid={API_KEY}&units=metric"

try:
    # Make API request
    response = requests.get(API_URL)
    response.raise_for_status()  # Raise HTTPError for bad responses (4xx or 5xx)
    data = response.json()

    # Extract relevant data
    temperature = data["main"]["temp"]
    humidity = data["main"]["humidity"]
    wind_speed = data["wind"]["speed"]
    description = data["weather"][0]["description"]
    city_name = data["name"]
    country = data["sys"]["country"]

    # Create a Pandas DataFrame
    weather_data = pd.DataFrame(
        {
            "City": [city_name],
            "Country": [country],
            "Temperature (C)": [temperature],
            "Humidity (%)": [humidity],
            "Wind Speed (m/s)": [wind_speed],
            "Description": [description],
        }
    )

    # Display the DataFrame
    print(weather_data)

    # Enhanced Example: Getting historical data and analyzing trends.
    # OpenWeatherMap has a paid API for historical data.
    # For free APIs, you might need to make multiple requests over time.
    # This is a simplified example of how you would adapt for historical data.

    # Example (Conceptual): If you had daily historical data:
    # historical_data = pd.read_csv("historical_weather.csv") #Or from many API calls.
    # historical_data['Date'] = pd.to_datetime(historical_data['Date']) # Ensure date format.
    # historical_data.set_index('Date', inplace=True)

    # Example visualization (if you had historical data):
    # plt.figure(figsize=(10, 6))
    # sns.lineplot(data=historical_data['Temperature (C)'])
    # plt.title(f"Temperature Trend in {CITY}")
    # plt.xlabel("Date")
    # plt.ylabel("Temperature (C)")
    # plt.grid(True)
    # plt.show()

    # Example visualization (using single data point)
    plt.figure(figsize=(6,4))
    sns.barplot(x="City", y="Temperature (C)", data=weather_data)
    plt.title(f"Temperature in {CITY}")
    plt.show()

except requests.exceptions.RequestException as e:
    print(f"Error making API request: {e}")
except KeyError as e:
    print(f"Error extracting data from API response: {e}")
except Exception as e:
    print(f"An unexpected error occurred: {e}")
